{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { ethers } from 'ethers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar App = function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    gasFees = _useState2[0],\n    setGasFees = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    var fetchGasFees = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var provider = new ethers.providers.JsonRpcProvider('https://ethgasstation.info/json/ethgasAPI.json');\n          var gasPrice = yield provider.getGasPrice();\n          var gasFeesInGwei = ethers.utils.formatUnits(gasPrice, 'gwei');\n          var gasFeesInEther = ethers.utils.formatEther(gasPrice);\n          var gasFeesData = [{\n            label: 'Gas Price (Gwei)',\n            value: gasFeesInGwei\n          }, {\n            label: 'Gas Price (Ether)',\n            value: gasFeesInEther\n          }];\n          setGasFees(gasFeesData);\n          setLoading(false);\n        } catch (error) {\n          console.log('Error fetching gas fees:', error);\n          setLoading(false);\n        }\n      });\n      return function fetchGasFees() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchGasFees();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: loading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\"\n    }) : _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: \"Ethereum Gas Fees:\"\n      }), gasFees.map(function (fee, index) {\n        return _jsxs(Text, {\n          style: styles.fee,\n          children: [fee.label, \": \", fee.value]\n        }, index);\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  heading: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  fee: {\n    fontSize: 16,\n    marginBottom: 5\n  }\n});\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","ActivityIndicator","ethers","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","gasFees","setGasFees","_useState3","_useState4","loading","setLoading","fetchGasFees","_ref","_asyncToGenerator","provider","providers","JsonRpcProvider","gasPrice","getGasPrice","gasFeesInGwei","utils","formatUnits","gasFeesInEther","formatEther","gasFeesData","label","value","error","console","log","apply","arguments","style","styles","container","children","size","color","heading","map","fee","index","create","flex","justifyContent","alignItems","fontSize","fontWeight","marginBottom"],"sources":["C:/Users/mamit/Desktop/Gas-Tracker/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, ActivityIndicator } from 'react-native';\nimport { ethers } from 'ethers';\n\nconst App = () => {\n  const [gasFees, setGasFees] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchGasFees = async () => {\n      try {\n        const provider = new ethers.providers.JsonRpcProvider('https://ethgasstation.info/json/ethgasAPI.json');\n        const gasPrice = await provider.getGasPrice();\n        const gasFeesInGwei = ethers.utils.formatUnits(gasPrice, 'gwei');\n        const gasFeesInEther = ethers.utils.formatEther(gasPrice);\n\n        const gasFeesData = [\n          { label: 'Gas Price (Gwei)', value: gasFeesInGwei },\n          { label: 'Gas Price (Ether)', value: gasFeesInEther }\n        ];\n\n        setGasFees(gasFeesData);\n        setLoading(false);\n      } catch (error) {\n        console.log('Error fetching gas fees:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchGasFees();\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      {loading ? (\n        <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n      ) : (\n        <View>\n          <Text style={styles.heading}>Ethereum Gas Fees:</Text>\n          {gasFees.map((fee, index) => (\n            <Text key={index} style={styles.fee}>\n              {fee.label}: {fee.value}\n            </Text>\n          ))}\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  heading: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  fee: {\n    fontSize: 16,\n    marginBottom: 5,\n  },\n});\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}